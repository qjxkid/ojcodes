!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
ListNode	reverse-linked-list-ii.cpp	/^    ListNode(int x) : val(x), next(NULL) {}$/;"	f	struct:ListNode	access:public	signature:(int x)
ListNode	reverse-linked-list-ii.cpp	/^struct ListNode {$/;"	s	file:
ListNode	reverse-nodes-in-k-group.cpp	/^    ListNode(int x) : val(x), next(NULL) {}$/;"	f	struct:ListNode	access:public	signature:(int x)
ListNode	reverse-nodes-in-k-group.cpp	/^struct ListNode {$/;"	s	file:
ListNode::ListNode	reverse-linked-list-ii.cpp	/^    ListNode(int x) : val(x), next(NULL) {}$/;"	f	struct:ListNode	access:public	signature:(int x)
ListNode::ListNode	reverse-nodes-in-k-group.cpp	/^    ListNode(int x) : val(x), next(NULL) {}$/;"	f	struct:ListNode	access:public	signature:(int x)
ListNode::next	reverse-linked-list-ii.cpp	/^    ListNode *next;$/;"	m	struct:ListNode	file:	access:public
ListNode::next	reverse-nodes-in-k-group.cpp	/^    ListNode *next;$/;"	m	struct:ListNode	file:	access:public
ListNode::val	reverse-linked-list-ii.cpp	/^    int val;$/;"	m	struct:ListNode	file:	access:public
ListNode::val	reverse-nodes-in-k-group.cpp	/^    int val;$/;"	m	struct:ListNode	file:	access:public
Point	max-points-on-a-line.cpp	/^    Point() : x(0), y(0) {}$/;"	f	struct:Point	access:public	signature:()
Point	max-points-on-a-line.cpp	/^    Point(int a, int b) : x(a), y(b) {}$/;"	f	struct:Point	access:public	signature:(int a, int b)
Point	max-points-on-a-line.cpp	/^struct Point {$/;"	s	file:
Point::Point	max-points-on-a-line.cpp	/^    Point() : x(0), y(0) {}$/;"	f	struct:Point	access:public	signature:()
Point::Point	max-points-on-a-line.cpp	/^    Point(int a, int b) : x(a), y(b) {}$/;"	f	struct:Point	access:public	signature:(int a, int b)
Point::x	max-points-on-a-line.cpp	/^    int x;$/;"	m	struct:Point	file:	access:public
Point::y	max-points-on-a-line.cpp	/^    int y;$/;"	m	struct:Point	file:	access:public
RandomListNode	copy-list-with-random-pointer.cpp	/^     RandomListNode(int x) : label(x), next(NULL), random(NULL) {}$/;"	f	struct:RandomListNode	access:public	signature:(int x)
RandomListNode	copy-list-with-random-pointer.cpp	/^struct RandomListNode {$/;"	s	file:
RandomListNode::RandomListNode	copy-list-with-random-pointer.cpp	/^     RandomListNode(int x) : label(x), next(NULL), random(NULL) {}$/;"	f	struct:RandomListNode	access:public	signature:(int x)
RandomListNode::label	copy-list-with-random-pointer.cpp	/^     int label;$/;"	m	struct:RandomListNode	file:	access:public
RandomListNode::next	copy-list-with-random-pointer.cpp	/^     RandomListNode *next, *random;$/;"	m	struct:RandomListNode	file:	access:public
RandomListNode::random	copy-list-with-random-pointer.cpp	/^     RandomListNode *next, *random;$/;"	m	struct:RandomListNode	file:	access:public
TreeNode	binary-tree-postorder-traversal.cpp	/^    TreeNode(int x) : val(x), left(NULL), right(NULL) {}$/;"	f	struct:TreeNode	access:public	signature:(int x)
TreeNode	binary-tree-postorder-traversal.cpp	/^struct TreeNode {$/;"	s	file:
TreeNode	triangle.cpp	/^    TreeNode(int x) : val(x), left(NULL), right(NULL) {}$/;"	f	struct:TreeNode	access:public	signature:(int x)
TreeNode	triangle.cpp	/^struct TreeNode {$/;"	s	file:
TreeNode::TreeNode	binary-tree-postorder-traversal.cpp	/^    TreeNode(int x) : val(x), left(NULL), right(NULL) {}$/;"	f	struct:TreeNode	access:public	signature:(int x)
TreeNode::TreeNode	triangle.cpp	/^    TreeNode(int x) : val(x), left(NULL), right(NULL) {}$/;"	f	struct:TreeNode	access:public	signature:(int x)
TreeNode::left	binary-tree-postorder-traversal.cpp	/^    TreeNode *left;$/;"	m	struct:TreeNode	file:	access:public
TreeNode::left	triangle.cpp	/^    TreeNode *left;$/;"	m	struct:TreeNode	file:	access:public
TreeNode::right	binary-tree-postorder-traversal.cpp	/^    TreeNode *right;$/;"	m	struct:TreeNode	file:	access:public
TreeNode::right	triangle.cpp	/^    TreeNode *right;$/;"	m	struct:TreeNode	file:	access:public
TreeNode::val	binary-tree-postorder-traversal.cpp	/^    int val;$/;"	m	struct:TreeNode	file:	access:public
TreeNode::val	triangle.cpp	/^    int val;$/;"	m	struct:TreeNode	file:	access:public
canJump	jump-game.cpp	/^bool canJump(int A[], int n) {$/;"	f	signature:(int A[], int n)
changeO	surrounded-regions.cpp	/^void changeO(int x, int y, vector<vector<char> >&board, stack<pair<int, int> > &point_s) {$/;"	f	signature:(int x, int y, vector<vector<char> >&board, stack<pair<int, int> > &point_s)
cmpequal	max-points-on-a-line.cpp	/^bool cmpequal(Point a, Point b) {$/;"	f	signature:(Point a, Point b)
cmpless	max-points-on-a-line.cpp	/^bool cmpless(Point a, Point b) {$/;"	f	signature:(Point a, Point b)
copyRandomList	copy-list-with-random-pointer.cpp	/^RandomListNode *copyRandomList(RandomListNode *head) {$/;"	f	signature:(RandomListNode *head)
evalRPN	evaluate-reverse-polish-notation.cpp	/^int evalRPN(vector<string> &tokens) {$/;"	f	signature:(vector<string> &tokens)
getMaxPoints	max-points-on-a-line.cpp	/^int getMaxPoints(vector<Point> &points, int index) {$/;"	f	signature:(vector<Point> &points, int index)
jump	jump-game-ii.cpp	/^int jump(int A[], int n) {$/;"	f	signature:(int A[], int n)
label	copy-list-with-random-pointer.cpp	/^     int label;$/;"	m	struct:RandomListNode	file:	access:public
left	binary-tree-postorder-traversal.cpp	/^    TreeNode *left;$/;"	m	struct:TreeNode	file:	access:public
left	triangle.cpp	/^    TreeNode *left;$/;"	m	struct:TreeNode	file:	access:public
lengthOfLastWord	length-of-last-word.cpp	/^int lengthOfLastWord(const char *s) {$/;"	f	signature:(const char *s)
longestConsecutive	longest-consecutive-sequence.cpp	/^int longestConsecutive(vector<int> &num) {$/;"	f	signature:(vector<int> &num)
main	binary-tree-postorder-traversal.cpp	/^int main() {$/;"	f	signature:()
main	copy-list-with-random-pointer.cpp	/^int main() {$/;"	f	signature:()
main	decode-ways.cpp	/^int main(){$/;"	f	signature:()
main	evaluate-reverse-polish-notation.cpp	/^int main() {$/;"	f	signature:()
main	jump-game-ii.cpp	/^int main() {$/;"	f	signature:()
main	jump-game.cpp	/^int main(){$/;"	f	signature:()
main	length-of-last-word.cpp	/^int main() {$/;"	f	signature:()
main	longest-consecutive-sequence.cpp	/^int main() {$/;"	f	signature:()
main	max-points-on-a-line.cpp	/^int main() {$/;"	f	signature:()
main	powx-n.cpp	/^int main() {$/;"	f	signature:()
main	reverse-linked-list-ii.cpp	/^int main() {$/;"	f	signature:()
main	reverse-nodes-in-k-group.cpp	/^int main() {$/;"	f	signature:()
main	surrounded-regions.cpp	/^int main() {$/;"	f	signature:()
main	triangle.cpp	/^int main() {$/;"	f	signature:()
main	unique-paths-ii.cpp	/^int main() {$/;"	f	signature:()
maxPathSum	triangle.cpp	/^int maxPathSum(TreeNode *root) {$/;"	f	signature:(TreeNode *root)
maxPoints	max-points-on-a-line.cpp	/^int maxPoints(vector<Point> &points) {$/;"	f	signature:(vector<Point> &points)
next	copy-list-with-random-pointer.cpp	/^     RandomListNode *next, *random;$/;"	m	struct:RandomListNode	file:	access:public
next	reverse-linked-list-ii.cpp	/^    ListNode *next;$/;"	m	struct:ListNode	file:	access:public
next	reverse-nodes-in-k-group.cpp	/^    ListNode *next;$/;"	m	struct:ListNode	file:	access:public
numDecodings	decode-ways.cpp	/^int numDecodings(string s) {$/;"	f	signature:(string s)
postorderTraversal	binary-tree-postorder-traversal.cpp	/^vector<int> postorderTraversal(TreeNode *root) {$/;"	f	signature:(TreeNode *root)
pow	powx-n.cpp	/^double pow(double x, int n) {$/;"	f	signature:(double x, int n)
random	copy-list-with-random-pointer.cpp	/^     RandomListNode *next, *random;$/;"	m	struct:RandomListNode	file:	access:public
reverseBetween	reverse-linked-list-ii.cpp	/^ListNode *reverseBetween(ListNode *head, int m, int n) {$/;"	f	signature:(ListNode *head, int m, int n)
reverseKGroup	reverse-nodes-in-k-group.cpp	/^ListNode *reverseKGroup(ListNode *head, int k) {$/;"	f	signature:(ListNode *head, int k)
right	binary-tree-postorder-traversal.cpp	/^    TreeNode *right;$/;"	m	struct:TreeNode	file:	access:public
right	triangle.cpp	/^    TreeNode *right;$/;"	m	struct:TreeNode	file:	access:public
solve	surrounded-regions.cpp	/^void solve(vector<vector<char>> &board) {$/;"	f	signature:(vector<vector<char>> &board)
uniquePaths	unique-paths-ii.cpp	/^int uniquePaths(int m, int n, vector<vector<int> > &obstacleGrid) {$/;"	f	signature:(int m, int n, vector<vector<int> > &obstacleGrid)
uniquePathsWithObstacles	unique-paths-ii.cpp	/^int uniquePathsWithObstacles(vector<vector<int> > &obstacleGrid) {$/;"	f	signature:(vector<vector<int> > &obstacleGrid)
val	binary-tree-postorder-traversal.cpp	/^    int val;$/;"	m	struct:TreeNode	file:	access:public
val	reverse-linked-list-ii.cpp	/^    int val;$/;"	m	struct:ListNode	file:	access:public
val	reverse-nodes-in-k-group.cpp	/^    int val;$/;"	m	struct:ListNode	file:	access:public
val	triangle.cpp	/^    int val;$/;"	m	struct:TreeNode	file:	access:public
x	max-points-on-a-line.cpp	/^    int x;$/;"	m	struct:Point	file:	access:public
y	max-points-on-a-line.cpp	/^    int y;$/;"	m	struct:Point	file:	access:public
